{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport React, { useEffect, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var getMovies = function getMovies() {\n    var response, json;\n    return _regeneratorRuntime.async(function getMovies$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('https://mfsmlbca01.x5.ru/MFSM-TEST/SM/9/rest/HPCAPIIncidents?query=hpc.record.id%3D%22IM000010325%22', {\n              method: 'GET',\n              headers: {\n                'Authorization': 'Basic QWwuU3RydW5ldnNraXk6',\n                'X-Gravitee-Api-Key': '77aedc3d-5a15-4965-98c1-27cc4682b96b'\n              }\n            }));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            setData(json.content[0]);\n            alert(json.content[0].Record);\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 14:\n            _context.prev = 14;\n            setLoading(false);\n            return _context.finish(14);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11, 14, 17]], Promise);\n  };\n\n  useEffect(function () {\n    getMovies();\n  }, []);\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      padding: 24\n    },\n    children: isLoading ? _jsx(ActivityIndicator, {}) : _jsx(FlatList, {\n      data: data,\n      keyExtractor: function keyExtractor(_ref, index) {\n        var Record = _ref.Record;\n        return Record;\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsxs(Text, {\n          children: [item.RecordID, \", \", item.Title]\n        });\n      }\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/stryn/expo/AwesomeProject/MFSMAdmin/App.js"],"names":["React","useEffect","useState","App","isLoading","setLoading","data","setData","getMovies","fetch","method","headers","response","json","content","alert","Record","console","error","flex","padding","index","item","RecordID","Title","styles","StyleSheet","create","container","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAYA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAAgCD,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOE,SAAP;AAAA,MAAkBC,UAAlB;;AACA,mBAAwBH,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOI,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAESC,KAAK,CAAC,sGAAD,EAAyG;AAACC,cAAAA,MAAM,EAAE,KAAT;AAAgBC,cAAAA,OAAO,EAAC;AAAC,iCAAgB,4BAAjB;AAA8C,sCAAqB;AAAnE;AAAxB,aAAzG,CAFd;;AAAA;AAERC,YAAAA,QAFQ;AAAA;AAAA,6CAGKA,QAAQ,CAACC,IAAT,EAHL;;AAAA;AAGRA,YAAAA,IAHQ;AAIdN,YAAAA,OAAO,CAACM,IAAI,CAACC,OAAL,CAAa,CAAb,CAAD,CAAP;AACAC,YAAAA,KAAK,CAAEF,IAAI,CAACC,OAAL,CAAa,CAAb,EAAgBE,MAAlB,CAAL;AALc;AAAA;;AAAA;AAAA;AAAA;AAOdC,YAAAA,OAAO,CAACC,KAAR;;AAPc;AAAA;AASdb,YAAAA,UAAU,CAAC,KAAD,CAAV;AATc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAaAJ,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,SAGE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEW,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,OAAO,EAAE;AAApB,KAAb;AAAA,cACChB,SAAS,GAAG,KAAC,iBAAD,KAAH,GACR,KAAC,QAAD;AACE,MAAA,IAAI,EAAEE,IADR;AAEE,MAAA,YAAY,EAAE,4BAAae,KAAb;AAAA,YAAGL,MAAH,QAAGA,MAAH;AAAA,eAAuBA,MAAvB;AAAA,OAFhB;AAGE,MAAA,UAAU,EAAE;AAAA,YAAGM,IAAH,SAAGA,IAAH;AAAA,eACV,MAAC,IAAD;AAAA,qBAAOA,IAAI,CAACC,QAAZ,QAAwBD,IAAI,CAACE,KAA7B;AAAA,UADU;AAAA;AAHd;AAFF,IAHF;AAeD;AAED,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTT,IAAAA,IAAI,EAAE,CADG;AAETU,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { StyleSheet, Text, View, ActivityIndicator, FlatList } from 'react-native';\nimport React, { useEffect, useState } from 'react';\n\n/*\n[16:31] Strunevskiy, Alexander\nAuthorization: Basic QWwuU3RydW5ldnNraXk6 X-Gravitee-Api-Key: 77aedc3d-5a15-4965-98c1-27cc4682b96b\n\n[16:31] Strunevskiy, Alexander\nhttps://mfsmlbca01.x5.ru/MFSM-TEST/SM/9/rest/x5uccxaudiotemplates\nhttps://reactnative.dev/movies.json\n, headers:['X-Gravitee-Api-Key']['77aedc3d-5a15-4965-98c1-27cc4682b96b'],headers:['Access-Control-Allow-Origin']['*']\n,'Access-Control-Allow-Origin':'*'\n*/\nexport default function App() {\n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n\n  const getMovies = async () => {\n     try {\n      const response = await fetch('https://mfsmlbca01.x5.ru/MFSM-TEST/SM/9/rest/HPCAPIIncidents?query=hpc.record.id%3D%22IM000010325%22', {method: 'GET', headers:{'Authorization':'Basic QWwuU3RydW5ldnNraXk6','X-Gravitee-Api-Key':'77aedc3d-5a15-4965-98c1-27cc4682b96b'}});\n      const json = await response.json();\n      setData(json.content[0]);\n      alert( json.content[0].Record)\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n  return (\n    //<View></View>\n\n    <View style={{ flex: 1, padding: 24 }}>\n    {isLoading ? <ActivityIndicator/> : (\n      <FlatList\n        data={data}\n        keyExtractor={({ Record }, index) => Record}\n        renderItem={({ item }) => (\n          <Text>{item.RecordID}, {item.Title}</Text>\n        )}\n      />\n    )}\n  </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\n/*\nhttp://msk-dpro-app615.x5.ru:13081/SM/9/rest/HPCAPIIncidents?query=hpc.record.id%3D%22IM000010325%22\n{\n  \"@count\": 1,\n  \"@start\": 1,\n  \"@totalcount\": 1,\n  \"Messages\": [],\n  \"ResourceName\": \"Record\",\n  \"ReturnCode\": 0,\n  \"content\": [{\"Record\": {\n    \"AssigneeName\": \"5c7ba27f0038486380b7d400\",\n    \"Assignment\": \"5c7bbc680021307480e50c70\",\n    \"ContactName\": \"INTEGRATION MONITORING\",\n    \"ContactService\": \"INTEGRATION MONITORING\",\n    \"CreatedTime\": \"2018-10-10T05:24:01+00:00\",\n    \"Description\": [\n      \"Spotlight has raised an alarm:\",\n      null,\n      \"Connection: msk-dpro-tst087\",\n      \"Time: 10 October 2018 г. 14:22:51\",\n      \"Severity: High\",\n      null,\n      \"Monitored Server - SQL Server Connection Failure: Cannot connect to SQL Server instance 'msk-dpro-tst087' : A transport-level error has occurred when receiving results from the server. (provider: TCP Provider, error: 0 - The specified network name is no longer available.) : The specified network name is no longer available [64]\"\n    ],\n    \"ITService\": \"CI00015869\",\n    \"InitialImpact\": \"4\",\n    \"IsFailure\": false,\n    \"IsMass\": false,\n    \"OLABreached\": false,\n    \"OLANextBreach\": \"2018-10-10T17:24:00+00:00\",\n    \"PriorityCode\": \"4\",\n    \"RecordID\": \"IM000010325\",\n    \"SLABreached\": false,\n    \"Severity\": \"4\",\n    \"Status\": \"Закрыт\",\n    \"Title\": \"Spotlight notification for msk-dpro-tst087\",\n    \"UpdatedBy\": \"HP Service Manager(hpclinker1)\",\n    \"UpdatedTime\": \"2018-10-11T05:31:57+00:00\"\n  }}]\n}\n*/"]},"metadata":{},"sourceType":"module"}